jobs:
- job: Android

  strategy:
    maxParallel: 2
    matrix:
      WinUI:
        ArtifactName: android-winui
        ProjectName: Uno.Toolkit.WinUI.Samples
        GeneratePackageOnBuild: false
        ApplicationBuildNumberOffset: 50
        VersionCodeOffset: 1
      UWP:
        ArtifactName: android-uwp
        ProjectName: Uno.Toolkit.Samples
        GeneratePackageOnBuild: false
        ApplicationBuildNumberOffset: 50
        VersionCodeOffset: 1
  pool:
    vmImage: windows-2022

  variables:
  - group: 'UnoPlatform KeyStore'

  steps:
  - template: templates/canary-updater.yml
  - template: templates/gitversion.yml
  - template: templates/dotnet-install.yml

  - task: DownloadSecureFile@1
    name: keyStore
    displayName: "Download keystore from secure files"
    inputs:
      secureFile: unoplatform.jks


  - script: |
      cd samples/$(ProjectName)/$(ProjectName).Mobile
      dotnet publish -f:net7.0-android -c:Release /t:SignAndroidPackage "/p:InformationalVersion=%GITVERSION_InformationalVersion%" /p:AndroidSigningKeyStore=$(keyStore.secureFilePath) /p:AndroidSigningStorePass=$(AndroidSigningStorePass) /p:AndroidSigningKeyPass=$(AndroidSigningKeyPass) /p:AndroidSigningKeyAlias=$(AndroidSigningKeyAlias) /p:AndroidKeyStore=true  /bl:$(build.artifactstagingdirectory)/build-$(ArtifactName).binlog
    displayName: 'Build project'
    condition: eq(variables['System.PullRequest.IsFork'],'False')

  - script: |
      cd samples/$(ProjectName)/$(ProjectName).Mobile
      dotnet publish -f:net7.0-android -c:Release "/p:InformationalVersion=%GITVERSION_InformationalVersion%" /bl:$(build.artifactstagingdirectory)/build-$(ArtifactName).binlog 
    displayName: 'Build project (Fork)'
    condition: eq(variables['System.PullRequest.IsFork'],'True')

  - task: CopyFiles@2
    displayName: 'Publish Binaries'
    inputs:
      SourceFolder: $(build.sourcesdirectory)/samples/$(ProjectName)/$(ProjectName).Mobile/bin/Release/net7.0-android
      Contents:  |
        **/*.apk
        **/*.aab
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: $(ArtifactName)
      ArtifactType: Container
