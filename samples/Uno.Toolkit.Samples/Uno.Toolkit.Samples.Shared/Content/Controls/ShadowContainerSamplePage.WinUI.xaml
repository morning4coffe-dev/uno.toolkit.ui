<Page x:Class="Uno.Toolkit.Samples.Content.Controls.ShadowContainerSamplePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:converters="using:Uno.Toolkit.Samples.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:Uno.Toolkit.Samples.Content.Controls"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:not_mobile="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:sample="using:Uno.Toolkit.Samples"
      xmlns:um="using:Uno.Material"
      xmlns:utu="using:Uno.Toolkit.UI"
	  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
      mc:Ignorable="d">
	<Page.Resources>

		<!--Shadow Styling-->

		<!--#region BUTTONS-->
		<SolidColorBrush x:Key="OnSurfaceDisabledBrushShadow"
						 Color="{StaticResource OnSurfaceDisabledColor}"
						 Opacity="0.08" />
		<!--#region Elevated-->

		<SolidColorBrush x:Key="OnSurfaceLowBrushShadow"
						 Color="{StaticResource OnSurfaceColor}"
						 Opacity="0.38" />

		<!--Elevated Shadows-->
		<utu:ShadowCollection x:Key="ElevatedNormal">
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="-4" OffsetY="-4" Opacity="0.4" Spread="0" Color="{StaticResource LightShadowColor1}" />
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="4" OffsetY="4" Opacity="0.4" Spread="0" Color="{StaticResource ShadeShadowColor1}" />
		</utu:ShadowCollection>

		<utu:ShadowCollection x:Key="ElevatedHovered">
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="-4" OffsetY="-4" Opacity="0.5" Spread="0" Color="{StaticResource LightShadowColor3}" />
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="4" OffsetY="4" Opacity="0.5" Spread="0" Color="{StaticResource ShadeShadowColor3}" />
		</utu:ShadowCollection>

		<utu:ShadowCollection x:Key="ElevatedPressed">
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="4" OffsetY="4" Opacity="0.4" Spread="0" Color="{StaticResource ShadeShadowColor3}" />
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="-4" OffsetY="-4" Opacity="0.4" Spread="0" Color="{StaticResource LightShadowColor3}" />
		</utu:ShadowCollection>

		<utu:ShadowCollection x:Key="ElevatedDisabled">
			<utu:Shadow BlurRadius="4" IsInner="False" OffsetX="-1" OffsetY="-1" Opacity="0.5" Spread="0" Color="{StaticResource LightShadowColor2}" />
			<utu:Shadow BlurRadius="4" IsInner="False" OffsetX="1" OffsetY="1" Opacity="0.4" Spread="0" Color="{StaticResource ShadeShadowColor2}" />
		</utu:ShadowCollection>

		<utu:ShadowCollection x:Key="ElevatedFocused">
			<utu:Shadow BlurRadius="48" IsInner="True" OffsetX="0" OffsetY="0" Opacity="0.24" Spread="0" Color="{StaticResource ShadeShadowColor1}" />
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="-4" OffsetY="-4" Opacity="0.4" Spread="0" Color="{StaticResource LightShadowColor1}" />
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="4" OffsetY="4" Opacity="0.4" Spread="0" Color="{StaticResource ShadeShadowColor1}" />
		</utu:ShadowCollection>

		<!--Elevated Style-->
		<Style x:Key="NmpElevatedButtonStyle"
			   BasedOn="{StaticResource MaterialBaseButtonStyle}"
			   TargetType="Button">

			<Setter Property="Foreground" Value="{ThemeResource PrimaryColor}" />
			<Setter Property="Background" Value="{ThemeResource SurfaceColor}" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<utu:ShadowContainer x:Name="RootPanel">

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">

									<VisualState x:Name="Normal">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource ElevatedNormal}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource ElevatedHovered}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource ElevatedPressed}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource ElevatedDisabled}" />
											<!--Check if this is correct, look a bit off-->
											<Setter Target="RootGrid.Background" Value="{StaticResource OnSurfaceDisabledBrushShadow}" />
											<Setter Target="ContentPresenter.Foreground" Value="{StaticResource OnSurfaceLowBrushShadow}" />
											<Setter Target="IconPresenter.Foreground" Value="{StaticResource OnSurfaceLowBrushShadow}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">

									<VisualState x:Name="Focused">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource ElevatedFocused}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="PointerFocused">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource ElevatedHovered}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Unfocused">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource ElevatedNormal}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid x:Name="RootGrid"
								  Background="{TemplateBinding Background}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  MinWidth="117"
								  MinHeight="38">

								<Grid CornerRadius="{TemplateBinding CornerRadius}"
									  Padding="{TemplateBinding Padding}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  MinWidth="{StaticResource ButtonIconMinWidth}"
													  HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}"
													  VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}"
													  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />

									<ContentPresenter x:Name="ContentPresenter"
													  Grid.Column="1"
													  Margin="{StaticResource ButtonContentMargin}"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  FontWeight="{TemplateBinding FontWeight}"
													  CharacterSpacing="{TemplateBinding CharacterSpacing}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Grid>
							</Grid>
						</utu:ShadowContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->
		
		<!--#region Filled-->

		<SolidColorBrush x:Key="OnPrimaryLowBrushShadow"
						 Color="{StaticResource OnPrimaryColor}"
						 Opacity="0.38" />
		<!--Filled Shadows-->
		<utu:ShadowCollection x:Key="FilledNormal">
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="-4" OffsetY="-4" Opacity="0.4" Spread="0" Color="{StaticResource LightShadowColor4}" />
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="4" OffsetY="4" Opacity="0.6" Spread="0" Color="{StaticResource ShadeShadowColor4}" />
		</utu:ShadowCollection>

		<utu:ShadowCollection x:Key="FilledHovered">
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="-4" OffsetY="-4" Opacity="0.5" Spread="0" Color="{StaticResource LightShadowColor4}" />
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="4" OffsetY="4" Opacity="0.7" Spread="0" Color="{StaticResource ShadeShadowColor4}" />
		</utu:ShadowCollection>

		<utu:ShadowCollection x:Key="FilledPressed">
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="4" OffsetY="4" Opacity="0.6" Spread="0" Color="{StaticResource ShadeShadowColor4}" />
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="-4" OffsetY="-4" Opacity="0.4" Spread="0" Color="{StaticResource LightShadowColor4}" />
		</utu:ShadowCollection>

		<utu:ShadowCollection x:Key="FilledDisabled">
			<utu:Shadow BlurRadius="4" IsInner="False" OffsetX="-1" OffsetY="-1" Opacity="1" Spread="0" Color="{StaticResource LightShadowColor4}" />
			<utu:Shadow BlurRadius="4" IsInner="False" OffsetX="1" OffsetY="1" Opacity="1" Spread="0" Color="{StaticResource ShadeShadowColor4}" />
		</utu:ShadowCollection>

		<utu:ShadowCollection x:Key="FilledFocused">
			<utu:Shadow BlurRadius="48" IsInner="True" OffsetX="0" OffsetY="0" Opacity="0.6" Spread="0" Color="{StaticResource ShadeShadowColor4}" />
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="-4" OffsetY="-4" Opacity="0.4" Spread="0" Color="{StaticResource LightShadowColor4}" />
			<utu:Shadow BlurRadius="16" IsInner="False" OffsetX="4" OffsetY="4" Opacity="0.6" Spread="0" Color="{StaticResource ShadeShadowColor4}" />
		</utu:ShadowCollection>

		<!--Filled Style-->
		<Style x:Key="NmpFilledButtonStyle"
			   BasedOn="{StaticResource MaterialBaseButtonStyle}"
			   TargetType="Button">

			<Setter Property="Foreground" Value="{ThemeResource OnPrimaryColor}" />
			<Setter Property="Background" Value="{ThemeResource PrimaryColor}" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<utu:ShadowContainer x:Name="RootPanel" Shadows="{StaticResource FilledNormal}">

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">

									<VisualState x:Name="Normal"/>

									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource FilledHovered}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource FilledPressed}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource FilledDisabled}" />
											<Setter Target="RootGrid.Background" Value="{StaticResource OnSurfaceDisabledBrushShadow}" />
											<Setter Target="ContentPresenter.Foreground" Value="{StaticResource OnPrimaryLowBrushShadow}" />
											<Setter Target="IconPresenter.Foreground" Value="{StaticResource OnPrimaryLowBrushShadow}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">

									<VisualState x:Name="Focused">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource FilledFocused}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="PointerFocused">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{StaticResource FilledHovered}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Unfocused" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid x:Name="RootGrid"
								  Background="{TemplateBinding Background}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  MinWidth="117"
								  MinHeight="38">

								<Grid CornerRadius="{TemplateBinding CornerRadius}"
									  Padding="{TemplateBinding Padding}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  MinWidth="{StaticResource ButtonIconMinWidth}"
													  HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}"
													  VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}"
													  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />

									<ContentPresenter x:Name="ContentPresenter"
													  Grid.Column="1"
													  Margin="{StaticResource ButtonContentMargin}"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  FontWeight="{TemplateBinding FontWeight}"
													  CharacterSpacing="{TemplateBinding CharacterSpacing}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Grid>
							</Grid>
						</utu:ShadowContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->
		
		<!--#region TOGGLE BUTTON-->
		<SolidColorBrush x:Key="ToggleButtonOnSurfaceMediumBrush"
						 Color="{StaticResource OnSurfaceColor}"
						 Opacity="0.6" />
		<SolidColorBrush x:Key="ToggleButtonOnPrimaryMediumBrush"
						 Color="{StaticResource OnPrimaryColor}"
						 Opacity="0.74" />

		<SolidColorBrush x:Key="ToggleButtonPrimaryHoverBrush"
						 Color="{StaticResource PrimaryColor}"
						 Opacity="0.08" />
		<SolidColorBrush x:Key="ToggleButtonPrimaryPressedBrush"
						 Color="{StaticResource PrimaryColor}"
						 Opacity="0.12" />

		<!--Shadows-->
		<utu:ShadowCollection x:Key="ToggleButtonShadow">
			<utu:Shadow BlurRadius="8" IsInner="False" OffsetX="-2" OffsetY="-2" Opacity="0.8" Spread="0" Color="{StaticResource LightShadowColor3}" />
			<utu:Shadow BlurRadius="8" IsInner="False" OffsetX="2" OffsetY="2" Opacity="0.8" Spread="0" Color="{StaticResource ShadeShadowColor3}" />
		</utu:ShadowCollection>

		<!--ToggleButton Style-->
		<Style x:Key="NmpToggleButtonStyle"
				TargetType="ToggleButton">
			<Setter Property="Foreground"
					Value="{ThemeResource ToggleButtonOnSurfaceMediumBrush}" />
			<Setter Property="Background"
					Value="{ThemeResource SurfaceColor}" />
			<Setter Property="MinHeight"
					Value="40" />
			<Setter Property="MinWidth"
					Value="40" />
			<Setter Property="UseSystemFocusVisuals"
					Value="True" />
			<Setter Property="HorizontalContentAlignment"
					Value="Center" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="CornerRadius"
					Value="20" />

			<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
			<Setter Property="um:ControlExtensions.AlternateContent"
				Value="{x:Null}" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<utu:ShadowContainer x:Name="RootPanel" Shadows="{StaticResource ToggleButtonShadow}">

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal">
										<VisualState.Setters>
											<Setter Target="RootGrid.Background"
													Value="{ThemeResource SurfaceColor}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Visibility"
													Value="Visible" />
											<Setter Target="AlternateContentPresenter.Visibility"
													Value="Collapsed" />
											<Setter Target="HoverOverlay.Opacity"
													Value="1" />
											<Setter Target="RootGrid.Background"
													Value="{ThemeResource SurfaceColor}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Visibility"
													Value="Visible" />
											<Setter Target="AlternateContentPresenter.Visibility"
													Value="Collapsed" />
											<Setter Target="PressedOverlay.Opacity"
													Value="1" />
											<Setter Target="RootGrid.Background"
													Value="{ThemeResource SurfaceColor}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Visibility"
													Value="Visible" />
											<Setter Target="AlternateContentPresenter.Visibility"
													Value="Collapsed" />
											<Setter Target="ContentPresenter.Foreground"
													Value="{ThemeResource OnSurfaceLowBrush}" />
											<Setter Target="RootPanel.Opacity"
													Value="0.38" />
											<Setter Target="RootGrid.Background"
													Value="{ThemeResource SurfaceColor}" />
										</VisualState.Setters>
									</VisualState>

									<!--Checkeck-->
									<VisualState x:Name="Checked">
										<VisualState.Setters>

											<Setter Target="ContentPresenter.Visibility"
													Value="Collapsed" />
											<Setter Target="AlternateContentPresenter.Visibility"
													Value="Visible" />
											<Setter Target="AlternateContentPresenter.Foreground"
													Value="{ThemeResource OnPrimaryColor}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="CheckedPointerOver">
										<VisualState.Setters>

											<Setter Target="ContentPresenter.Visibility"
													Value="Collapsed" />
											<Setter Target="AlternateContentPresenter.Visibility"
													Value="Visible" />
											<Setter Target="AlternateContentPresenter.Foreground"
													Value="{ThemeResource OnPrimaryColor}" />
											<Setter Target="HoverOverlay.Opacity"
													Value="1" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="CheckedPressed">
										<VisualState.Setters>

											<Setter Target="ContentPresenter.Visibility"
													Value="Collapsed" />
											<Setter Target="AlternateContentPresenter.Visibility"
													Value="Visible" />
											<Setter Target="AlternateContentPresenter.Foreground"
													Value="{ThemeResource OnPrimaryColor}" />
											<Setter Target="PressedOverlay.Opacity"
													Value="1" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="CheckedDisabled">
										<VisualState.Setters>

											<Setter Target="ContentPresenter.Visibility"
													Value="Collapsed" />
											<Setter Target="AlternateContentPresenter.Visibility"
													Value="Visible" />
											<Setter Target="AlternateContentPresenter.Foreground"
													Value="{ThemeResource ToggleButtonOnPrimaryMediumBrush}" />
											<Setter Target="RootPanel.Opacity"
													Value="0.38" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid x:Name="RootGrid"
								  Background="{ThemeResource PrimaryColor}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  Width="{TemplateBinding MinWidth}"
								  Height="{TemplateBinding MinHeight}">
								<!-- Ellipse for PointedOver State -->
								<Ellipse x:Name="HoverOverlay"
										 HorizontalAlignment="Stretch"
										 VerticalAlignment="Stretch"
										 Fill="{StaticResource ToggleButtonPrimaryHoverBrush}"
										 Opacity="0"
										 Visibility="Visible"/>

								<!-- Ellipse for Pressed State -->
								<Ellipse x:Name="PressedOverlay"
										 HorizontalAlignment="Stretch"
										 VerticalAlignment="Stretch"
										 Fill="{StaticResource ToggleButtonPrimaryPressedBrush}"
										 Opacity="0"
										 Visibility="Visible"/>

								<!-- Content -->
								<ContentPresenter x:Name="ContentPresenter"
												  AutomationProperties.AccessibilityView="Raw"
												  Content="{TemplateBinding Content}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

								<!-- Alternate Content -->
								<ContentPresenter x:Name="AlternateContentPresenter"
												  AutomationProperties.AccessibilityView="Raw"
												  Content="{Binding Path=(um:ControlExtensions.AlternateContent), RelativeSource={RelativeSource TemplatedParent}}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												  Foreground="{StaticResource OnPrimaryBrush}"
												  Visibility="Collapsed" />
							</Grid>
						</utu:ShadowContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region ICON BUTTON-->

		<!--Shadows-->
		<utu:ShadowCollection x:Key="IconButtonShadows">
			<utu:Shadow BlurRadius="8" IsInner="False" OffsetX="-2" OffsetY="-2" Opacity="0.8" Spread="0" Color="{StaticResource LightShadowColor3}" />
			<utu:Shadow BlurRadius="8" IsInner="False" OffsetX="2" OffsetY="2" Opacity="0.8" Spread="0" Color="{StaticResource ShadeShadowColor3}" />
		</utu:ShadowCollection>

		<!--IconButton Style-->
		<Style x:Key="NmpIconButtonStyle"
			   BasedOn="{StaticResource MaterialBaseButtonStyle}"
			   TargetType="Button">
			<Setter Property="Foreground"
					Value="{ThemeResource IconButtonForeground}" />
			<Setter Property="Background"
					Value="{ThemeResource SurfaceColor}" />
			<Setter Property="CornerRadius"
					Value="20" />
			<Setter Property="MinHeight"
					Value="40" />
			<Setter Property="MinWidth"
					Value="40" />
			<Setter Property="HorizontalContentAlignment"
					Value="Center" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<utu:ShadowContainer x:Name="RootPanel" Shadows="{StaticResource IconButtonShadows}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="HoverOverlay.Opacity" Value="{ThemeResource IconButtonOpacityVisibleState}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="PressedOverlay.Opacity" Value="{ThemeResource IconButtonOpacityVisibleState}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Focused">
										<VisualState.Setters>
											<Setter Target="FocusedOverlay.Opacity" Value="{ThemeResource IconButtonOpacityVisibleState}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource IconButtonForegroundDisabled}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="RootGrid"
									Background="{TemplateBinding Background}"
									CornerRadius="{TemplateBinding CornerRadius}"
									Width="{TemplateBinding MinWidth}"
									Height="{TemplateBinding MinHeight}">
								<!-- Ellipse for PointerOver State -->
								<Ellipse x:Name="HoverOverlay"
										 HorizontalAlignment="{StaticResource IconButtonEllipseHorizontalAlignment}"
										 VerticalAlignment="{StaticResource IconButtonEllipseVerticalAlignment}"
										 Fill="{ThemeResource IconButtonEllipseFillPointerOver}"
										 Opacity="{ThemeResource IconButtonOpacityHiddenState}" />

								<!-- Ellipse for Pressed State -->
								<Ellipse x:Name="PressedOverlay"
										 HorizontalAlignment="{StaticResource IconButtonEllipseHorizontalAlignment}"
										 VerticalAlignment="{StaticResource IconButtonEllipseVerticalAlignment}"
										 Fill="{ThemeResource IconButtonEllipseFillPressed}"
										 Opacity="{ThemeResource IconButtonOpacityHiddenState}" />

								<!-- Ellipse for Focused State -->
								<Ellipse x:Name="FocusedOverlay"
										 HorizontalAlignment="{StaticResource IconButtonEllipseHorizontalAlignment}"
										 VerticalAlignment="{StaticResource IconButtonEllipseVerticalAlignment}"
										 Fill="{ThemeResource IconButtonEllipseFillFocused}"
										 Opacity="{ThemeResource IconButtonOpacityHiddenState}" />

								<!-- Content -->
								<ContentPresenter x:Name="ContentPresenter"
												  AutomationProperties.AccessibilityView="Raw"
												  Content="{TemplateBinding Content}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												  Width="24"
												  Height="24"/>
							</Grid>
						</utu:ShadowContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#endregion-->

		<!--#region COMBOBOX-->
		<!--Shadows-->
		<utu:ShadowCollection x:Key="ComboboxShadow">
			<utu:Shadow BlurRadius="4" IsInner="True" OffsetX="4" OffsetY="4" Opacity="0.4" Spread="0" Color="{StaticResource ShadeShadowColor1}" />
			<utu:Shadow BlurRadius="4" IsInner="True" OffsetX="-4" OffsetY="-4" Opacity="0.4" Spread="0" Color="{StaticResource LightShadowColor1}" />
		</utu:ShadowCollection>

		<!--Combobox Style-->
		<Style x:Key="NmpComboBoxStyle"
			   TargetType="ComboBox">
			<Setter Property="Foreground" Value="{ThemeResource OnSurfaceMediumBrush}" />
			<Setter Property="Background" Value="{ThemeResource SurfaceColor}" />
			<Setter Property="Padding" Value="16,0" />

			<!-- Start: Body Large Typo -->
			<Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
			<Setter Property="FontWeight" Value="{ThemeResource BodyLargeFontWeight}" />
			<Setter Property="FontSize" Value="{ThemeResource BodyLargeFontSize}" />
			<Setter Property="CharacterSpacing" Value="{ThemeResource BodyLargeCharacterSpacing}" />
			<!-- End: Body Large Typo -->

			<Setter Property="TabNavigation" Value="Once" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
			<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
			<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
			<Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="ItemContainerStyle" Value="{StaticResource MaterialComboBoxItemStyle}" />
			<!--<xamarin:Setter Property="uno:ComboBox.DropDownPreferredPlacement"
						Value="Below" />-->

			<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
			<Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />

			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<CarouselPanel />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<utu:ShadowContainer x:Name="RootPanel" Shadows="{StaticResource ComboboxShadow}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />

									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="ComboBoxContent.Background" Value="{ThemeResource SystemControlTransparentBrush}" />
											<Setter Target="DropDownGlyph_Down.Fill" Value="{ThemeResource OnSurfaceLowBrush}" />
											<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
											<Setter Target="UpperPlaceholderElement.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
											<Setter Target="IconPresenter.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
											<Setter Target="PopupBorder.Background" Value="{ThemeResource SystemControlTransparentBrush}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed" />
								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="PointerFocused" />
									<VisualState x:Name="FocusedDropDown" />
									<VisualState x:Name="Focused" />
									<VisualState x:Name="FocusedPressed" />
									<VisualState x:Name="Unfocused" />
								</VisualStateGroup>

								<VisualStateGroup x:Name="DropDownStates">
									<VisualState x:Name="Opened">
										<VisualState.Setters>
											<Setter Target="DropDownGlyph_Up.Fill" Value="{ThemeResource PrimaryBrush}" />
											<Setter Target="DropDownGlyph_Down.Visibility" Value="Collapsed" />
											<Setter Target="DropDownGlyph_Up.Visibility" Value="Visible" />
										</VisualState.Setters>
										<Storyboard>

											<SplitOpenThemeAnimation ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 ClosedTargetName="ContentPresenter"
																	 ContentTargetName="ScrollViewer"
																	 ContentTranslationOffset="0"
																	 OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	 OpenedTargetName="PopupBorder" />
										</Storyboard>
									</VisualState>

									<VisualState x:Name="Closed">
										<VisualState.Setters>
											<Setter Target="DropDownGlyph_Down.Visibility" Value="Visible" />
											<Setter Target="DropDownGlyph_Up.Visibility" Value="Collapsed" />
										</VisualState.Setters>
										<Storyboard>
											<SplitCloseThemeAnimation ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  ClosedTargetName="ContentPresenter"
																	  ContentTargetName="ScrollViewer"
																	  ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  ContentTranslationOffset="40"
																	  OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																	  OpenedTargetName="PopupBorder" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid x:Name="RootGrid"
								  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								  Background="{TemplateBinding Background}"
								  CornerRadius="4"
								  MinHeight="50"
								  MinWidth="250">

								<Grid x:Name="ComboBoxContent"
									  Padding="{TemplateBinding Padding}">
									<Grid.Resources>
										<!-- Resources added here in order to manage the ContentPresenter TranslateY depending if there is a PlaceholderText or not -->
										<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithPlaceholder"
															TranslateY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToContentTranslateYConverter}, TargetNullValue=0, FallbackValue=0}" />

										<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithoutPlaceholder"
															TranslateY="0" />

										<um:FromEmptyStringToValueConverter x:Key="EmptyToCompositeTransformConverter"
																			NotNullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithPlaceholder}"
																			NullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}" />
									</Grid.Resources>

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<!-- Leading Icon -->
									<ContentPresenter x:Name="IconPresenter"
													  Width="20"
													  Margin="2,0,18,0"
													  HorizontalAlignment="Center"
													  VerticalAlignment="Center"
													  Foreground="{ThemeResource OnSurfaceBrush}"
													  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

									<!-- ContentPresenter -->
									<ContentPresenter x:Name="ContentPresenter"
													  Grid.Column="1"
													  MaxLines="1"
													  VerticalAlignment="Center"
													  RenderTransform="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformConverter}, TargetNullValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}, FallbackValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}}" />

									<!-- PlaceholderElement -->
									<TextBlock x:Name="PlaceholderElement"
											   Grid.Column="1"
											   VerticalAlignment="Center"
											   Visibility="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisible}, TargetNullValue=Collapsed, FallbackValue=Collapsed}"
											   Foreground="{ThemeResource OnSurfaceMediumBrush}"
											   IsHitTestVisible="False"
											   MaxLines="1"
											   RenderTransformOrigin="0,0.5"
											   Style="{StaticResource BodyLarge}"
											   Text="{TemplateBinding PlaceholderText}" />

									<TextBlock x:Name="UpperPlaceholderElement"
											   Grid.Column="1"
											   VerticalAlignment="Center"
											   Visibility="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsed}, TargetNullValue=Collapsed, FallbackValue=Collapsed}"
											   Foreground="{ThemeResource OnSurfaceVariantBrush}"
											   IsHitTestVisible="False"
											   MaxLines="1"
											   RenderTransformOrigin="0,0.5"
											   Style="{StaticResource BodyLarge}"
											   Text="{TemplateBinding PlaceholderText}">
										<TextBlock.RenderTransform>
											<CompositeTransform x:Name="UpperPlaceholderElement_CompositeTransform"
																ScaleX="0.7"
																ScaleY="0.7"
																TranslateY="-11" />
										</TextBlock.RenderTransform>
									</TextBlock>

									<!-- Down -->
									<Path x:Name="DropDownGlyph_Down"
										  Grid.Column="2"
										  Width="10"
										  Height="5"
										  Margin="7,0"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  Data="M0 0L5 5L10 0H0Z"
										  Fill="{ThemeResource OnSurfaceMediumBrush}"
										  Stretch="Uniform" />

									<!-- Up -->
									<Path x:Name="DropDownGlyph_Up"
										  Grid.Column="2"
										  Width="10"
										  Height="5"
										  Margin="7,0"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  Data="M0 0L-5 -5L-10 0H0Z"
										  Fill="{ThemeResource OnSurfaceMediumBrush}"
										  Stretch="Uniform"
										  Visibility="Collapsed" />
								</Grid>

								<!-- Popup -->
								<Popup x:Name="Popup">
									<Border x:Name="PopupBorder"
											CornerRadius="4"
											Background="{ThemeResource SurfaceBrush}">

										<!-- Workaround for Issue #213 where android PopupBorder doesn't get redrawn properly, adds Background, CornerRadius and Border to ScrollViewer -->
										<ScrollViewer x:Name="ScrollViewer"
													  MinWidth="400"
													  AutomationProperties.AccessibilityView="Raw"
													  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
													  CornerRadius="4"
													  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
													  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
													  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
													  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
													  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
													  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
													  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
													  VerticalSnapPointsAlignment="Near"
													  VerticalSnapPointsType="OptionalSingle"
													  ZoomMode="Disabled"
													  Foreground="{ThemeResource SystemControlTransparentBrush}"
													  BorderBrush="{ThemeResource SystemControlTransparentBrush}">
											<ItemsPresenter />
										</ScrollViewer>
									</Border>
								</Popup>
							</Grid>
						</utu:ShadowContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region FAB-->
		<SolidColorBrush x:Key="FABOnPrimaryContainerHovered"
						 Color="{StaticResource OnPrimaryContainerColor}"
						 Opacity="0.06" />
		<SolidColorBrush x:Key="FABOnPrimaryContainerFocused"
						 Color="{StaticResource OnPrimaryContainerColor}"
						 Opacity="0.12" />
		<SolidColorBrush x:Key="FABOnPrimaryContainerPressed"
						 Color="{StaticResource OnPrimaryContainerColor}"
						 Opacity="0.12" />

		<!--Shadows-->
		<utu:ShadowCollection x:Key="FabShadow">
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="8" OffsetY="8" Opacity="0.2" Spread="0" Color="{StaticResource LightShadowColor5}" />
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="-8" OffsetY="-8" Opacity="0.4" Spread="0" Color="{StaticResource ShadeShadowColor5}" />
			<utu:Shadow BlurRadius="20" IsInner="False" OffsetX="12" OffsetY="12" Opacity="0.4" Spread="0" Color="{StaticResource MediumShadowColor5}" />
		</utu:ShadowCollection>

		<!--FAB Style-->
		<Style x:Key="NmpFabStyle"
				TargetType="Button">

			<Setter Property="Background"
					Value="{StaticResource PrimaryContainerColor}" />
			<Setter Property="Foreground"
					Value="{StaticResource OnPrimaryContainerColor}" />
			<Setter Property="FontFamily"
					Value="{StaticResource MaterialMediumFontFamily}" />
			<Setter Property="FontSize"
					Value="{StaticResource MaterialFabFontSize}" />
			<Setter Property="HorizontalContentAlignment"
					Value="Center" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="CornerRadius"
					Value="16" />
			<Setter Property="Padding"
					Value="16" />
			<Setter Property="MinHeight"
					Value="56" />

			<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
			<Setter Property="um:ControlExtensions.Icon"
					Value="{x:Null}" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">

						<utu:ShadowContainer x:Name="RootPanel" Shadows="{StaticResource FabShadow}">

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">

									<VisualState x:Name="Normal" />

									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="RootGrid.Background"
													Value="{StaticResource FABOnPrimaryContainerHovered}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Disabled" />

									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="RootGrid.Background"
													Value="{StaticResource FABOnPrimaryContainerPressed}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">

									<VisualState x:Name="Focused">
										<VisualState.Setters>
											<Setter Target="RootGrid.Background"
													Value="{StaticResource FABOnPrimaryContainerFocused}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="PointerFocused" />

									<VisualState x:Name="Unfocused" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="RootGrid"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  Background="{StaticResource PrimaryContainerColor}"
								  MinHeight="{TemplateBinding MinHeight}"
								  MinWidth="{TemplateBinding MinWidth}">

								<StackPanel x:Name="ContentPanel"
											Orientation="Horizontal"
											Margin="{TemplateBinding Padding}">

									<!-- Icon -->
									<Viewbox Height="24"
											 Width="24"
											 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											 Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
										<ContentPresenter Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
														  Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
									</Viewbox>

									<!-- Icon/Content spacing -->
									<Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
										<Border Width="8"
												Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
									</Border>

									<!-- Content -->
									<ContentPresenter x:Name="ContentPresenter"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  CornerRadius="{StaticResource MaterialButtonCornerRadius}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</StackPanel>
							</Grid>
						</utu:ShadowContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Small FAB Style-->
		<Style x:Key="NmpFabSmallStyle"
		   BasedOn="{StaticResource NmpFabStyle}"
		   TargetType="Button">

			<Setter Property="Padding"
				Value="12,0" />
			<Setter Property="MinHeight"
				Value="40" />
			<Setter Property="CornerRadius"
					Value="12" />
		</Style>

		<!--Large FAB Style-->
		<Style x:Key="NmpFabLargeStyle"
		   BasedOn="{StaticResource NmpFabStyle}"
		   TargetType="Button">

			<Setter Property="Padding"
				Value="40" />
			<Setter Property="MinHeight"
				Value="96" />
			<Setter Property="MinWidth"
				Value="96" />
			<Setter Property="CornerRadius"
					Value="28" />
		</Style>
		<!--#endregion-->
		
		<!--#region CHIPS-->
		<SolidColorBrush x:Key="ChipsOnSurfaceHoverBrush"
						 Color="{StaticResource OnSurfaceDisabledColor}"
						 Opacity="0.08" />
		<SolidColorBrush x:Key="ChipsOnSurfacePressedBrush"
						 Color="{StaticResource OnSurfaceDisabledColor}"
						 Opacity="0.12" />
		<SolidColorBrush x:Key="ChipsOnSurfaceDisabledBrush"
						 Color="{StaticResource OnSurfaceDisabledColor}"
						 Opacity="0.08" />

		<SolidColorBrush x:Key="ChipsOnPrimaryContainerHovered"
						 Color="{StaticResource OnPrimaryContainerColor}"
						 Opacity="0.08" />
		<SolidColorBrush x:Key="ChipsOnPrimaryContainerPressed"
						 Color="{StaticResource OnPrimaryContainerColor}"
						 Opacity="0.12" />

		<!--Shadows-->
		<utu:ShadowCollection x:Key="ChipsShadows">
			<utu:Shadow BlurRadius="4" IsInner="False" OffsetX="-1" OffsetY="-1" Opacity="1" Spread="0" Color="{StaticResource LightShadowColor1}" />
			<utu:Shadow BlurRadius="4" IsInner="False" OffsetX="1" OffsetY="1" Opacity="0.6" Spread="0" Color="{StaticResource ShadeShadowColor1}" />
		</utu:ShadowCollection>
		<utu:ShadowCollection x:Key="ChipsShadowsSelected">
			<utu:Shadow BlurRadius="4" IsInner="True" OffsetX="1" OffsetY="1" Opacity="0.9" Spread="0" Color="{StaticResource ShadeShadowColor6}" />
			<utu:Shadow BlurRadius="4" IsInner="True" OffsetX="-1" OffsetY="-1" Opacity="0.9" Spread="0" Color="{StaticResource LightShadowColor6}" />
		</utu:ShadowCollection>

		<!--Chips Style-->
		<Style x:Key="NmpChipStyle"
			   TargetType="utu:Chip">
			<Setter Property="Foreground"
					Value="{ThemeResource OnSurfaceVariantBrush}" />
			<Setter Property="Background"
					Value="{ThemeResource PrimaryBrush}" />
			<Setter Property="CornerRadius"
					Value="8" />
			<Setter Property="VerticalAlignment"
					Value="Stretch" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="Padding"
					Value="8,0" />

			<Setter Property="Icon"
					Value="{x:Null}" />

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="utu:Chip">
						<utu:ShadowContainer x:Name="RootPanel">

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{ThemeResource ChipsShadows}" />
											<Setter Target="StateOverlay.Background" Value="Transparent" />
											<Setter Target="GridRoot.Background" Value="{ThemeResource SurfaceBrush}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{ThemeResource ChipsShadows}" />
											<Setter Target="StateOverlay.Background" Value="{ThemeResource ChipsOnSurfaceHoverBrush}" />
											<Setter Target="GridRoot.Background" Value="{ThemeResource SurfaceBrush}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{ThemeResource ChipsShadows}" />
											<Setter Target="StateOverlay.Background" Value="{ThemeResource ChipsOnSurfacePressedBrush}" />
											<Setter Target="GridRoot.Background" Value="{ThemeResource SurfaceBrush}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{ThemeResource ChipsShadows}" />
											<Setter Target="RootPanel.Opacity" Value="0.38" />
											<Setter Target="GridRoot.Background" Value="{ThemeResource SurfaceBrush}" />
											<Setter Target="StateOverlay.Background" Value="{ThemeResource ChipsOnSurfaceDisabledBrush}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
											<Setter Target="PART_RemoveButton.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
											<Setter Target="IconPresenter.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Checked">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{ThemeResource ChipsShadowsSelected}" />
											<Setter Target="StateOverlay.Background" Value="Transparent" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OnPrimaryBrush}" />
											<Setter Target="IconPresenter.Foreground" Value="{ThemeResource OnPrimaryBrush}" />
											<Setter Target="PART_RemoveButton.Foreground" Value="{ThemeResource OnPrimaryBrush}" />
											<Setter Target="CheckGlyphElement.Visibility" Value="Visible" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="CheckedPointerOver">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{ThemeResource ChipsShadowsSelected}" />
											<Setter Target="StateOverlay.Background" Value="{ThemeResource ChipsOnPrimaryContainerHovered}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OnPrimaryBrush}" />
											<Setter Target="IconPresenter.Foreground" Value="{ThemeResource OnPrimaryBrush}" />
											<Setter Target="PART_RemoveButton.Foreground" Value="{ThemeResource OnPrimaryBrush}" />
											<Setter Target="CheckGlyphElement.Visibility" Value="Visible" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="CheckedPressed">
										<VisualState.Setters>
											<Setter Target="RootPanel.Shadows" Value="{ThemeResource ChipsShadowsSelected}" />
											<Setter Target="StateOverlay.Background" Value="{ThemeResource ChipsOnPrimaryContainerPressed}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OnPrimaryBrush}" />
											<Setter Target="IconPresenter.Foreground" Value="{ThemeResource OnPrimaryBrush}" />
											<Setter Target="PART_RemoveButton.Foreground" Value="{ThemeResource OnPrimaryBrush}" />
											<Setter Target="CheckGlyphElement.Visibility" Value="Visible" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid x:Name="GridRoot"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  Height="32"
								  Margin="4"
								  Background="{TemplateBinding Background}">
								<Border x:Name="StateOverlay"
										Background="Transparent"
										CornerRadius="{TemplateBinding CornerRadius}" />

								<Grid Padding="{TemplateBinding Padding}"
									  CornerRadius="{TemplateBinding CornerRadius}">
									<Grid.ColumnDefinitions>
										<!-- 0: Leading Icon, 1: Content: 2: Remove Button -->
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<!-- C0: Leading Icon / Check Glyph -->
									<ContentPresenter x:Name="IconPresenter"
													  Grid.Column="0"
													  Width="18"
													  Height="18"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
													  AutomationProperties.AccessibilityView="Raw"
													  Content="{TemplateBinding Icon}"
													  ContentTemplate="{TemplateBinding IconTemplate}"
													  Foreground="{ThemeResource OnSurfaceVariantBrush}"
													  Visibility="{Binding Icon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed}" />

									<Grid x:Name="CheckGlyphElement"
										  Grid.Column="0"
										  Width="20"
										  Height="20"
										  Padding="2"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Visibility="Collapsed">
										<Path HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  AutomationProperties.AccessibilityView="Raw"
											  Data="{StaticResource MaterialCheckGlyphPathData}"
											  Fill="{StaticResource OnPrimaryBrush}"
											  Stretch="Uniform"
											  Visibility="{Binding Icon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToVisible}, FallbackValue=Collapsed}" />
									</Grid>

									<!-- C1: Content -->
									<ContentPresenter x:Name="ContentPresenter"
													  Grid.Column="1"
													  Margin="8,0"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													  AutomationProperties.AccessibilityView="Raw"
													  CharacterSpacing="7"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontFamily="{ThemeResource MaterialMediumFontFamily}"
													  Foreground="{TemplateBinding Foreground}" />

									<!-- C2: Remove Button -->
									<Button x:Name="PART_RemoveButton"
											Grid.Column="2"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Foreground="{TemplateBinding Foreground}"
											Style="{StaticResource MaterialChipDeleteIconButtonStyle}"
											Visibility="{Binding CanRemove, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource MaterialTrueToVisible}, FallbackValue=Collapsed}" />
								</Grid>
							</Grid>
						</utu:ShadowContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->

		<!--#region TabBar-->

		<!--SHADOWS-->
		<utu:ShadowCollection x:Key="TabBarShadows">
			<utu:Shadow BlurRadius="48" IsInner="False" OffsetX="-8" OffsetY="-16" Opacity="0.6" Spread="0" Color="{StaticResource LightShadowColor1}" />
			<utu:Shadow BlurRadius="32" IsInner="False" OffsetX="8" OffsetY="8" Opacity="0.6" Spread="0" Color="{StaticResource ShadeShadowColor1}" />
		</utu:ShadowCollection>

		<Style x:Key="NmpBaseTabBarStyle"
			   BasedOn="{StaticResource DefaultTabBarStyle}"
			   TargetType="utu:TabBar">
			<Setter Property="Width" Value="300" />
			<Setter Property="Height" Value="80" />
			<Setter Property="CornerRadius" Value="16,16,0,0" />
			<Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
			<Setter Property="um:ControlExtensions.TintedBackground" Value="{x:Null}" />
			<Setter Property="um:ControlExtensions.IsTintEnabled" Value="False" />
			<Setter Property="SelectionIndicatorPresenterStyle" Value="{StaticResource MaterialTabBarSelectionIndicatorPresenterStyle}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="utu:TabBar">
						<utu:ShadowContainer Shadows="{StaticResource TabBarShadows}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="OrientationStates">
									<VisualState x:Name="Horizontal">
										<VisualState.Setters>
											<Setter Target="BelowSelectionIndicatorPresenter.VerticalContentAlignment" Value="Stretch" />
											<Setter Target="BelowSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Left" />
											<Setter Target="AboveSelectionIndicatorPresenter.VerticalContentAlignment" Value="Stretch" />
											<Setter Target="AboveSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Left" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Vertical">
										<VisualState.Setters>
											<Setter Target="BelowSelectionIndicatorPresenter.VerticalContentAlignment" Value="Top" />
											<Setter Target="BelowSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Stretch" />
											<Setter Target="AboveSelectionIndicatorPresenter.VerticalContentAlignment" Value="Top" />
											<Setter Target="AboveSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Stretch" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="IndicatorPlacementStates">
									<VisualState x:Name="Above" />
									<VisualState x:Name="Below">
										<VisualState.Setters>
											<Setter Target="BelowSelectionIndicatorPresenter.Visibility" Value="Visible" />
											<Setter Target="AboveSelectionIndicatorPresenter.Visibility" Value="Collapsed" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="TabBarGrid"
								  Background="{TemplateBinding Background}"
								  CornerRadius="{TemplateBinding CornerRadius}">
								<utu:TabBarSelectionIndicatorPresenter x:Name="BelowSelectionIndicatorPresenter"
																	   Padding="{TemplateBinding Padding}"
																	   AutomationProperties.AutomationId="BelowSelectionIndicatorPresenter"
																	   Content="{TemplateBinding SelectionIndicatorContent}"
																	   ContentTemplate="{TemplateBinding SelectionIndicatorContentTemplate}"
																	   Foreground="{TemplateBinding Foreground}"
																	   IndicatorTransitionMode="{TemplateBinding SelectionIndicatorTransitionMode}"
																	   Opacity="0"
																	   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																	   Style="{TemplateBinding SelectionIndicatorPresenterStyle}"
																	   Visibility="Collapsed" />
								<ItemsPresenter x:Name="TabBarItemsPresenter"
												Width="{TemplateBinding Width}"
												Height="{TemplateBinding Height}"
												Padding="{TemplateBinding Padding}" />
								<utu:TabBarSelectionIndicatorPresenter x:Name="AboveSelectionIndicatorPresenter"
																	   Padding="{TemplateBinding Padding}"
																	   AutomationProperties.AutomationId="AboveSelectionIndicatorPresenter"
																	   Content="{TemplateBinding SelectionIndicatorContent}"
																	   ContentTemplate="{TemplateBinding SelectionIndicatorContentTemplate}"
																	   Foreground="{TemplateBinding Foreground}"
																	   IndicatorTransitionMode="{TemplateBinding SelectionIndicatorTransitionMode}"
																	   Opacity="0"
																	   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																	   Style="{TemplateBinding SelectionIndicatorPresenterStyle}" />
								
							</Grid>
						</utu:ShadowContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="NmpVerticalTabBarStyle"
			   BasedOn="{StaticResource NmpBaseTabBarStyle}"
			   TargetType="utu:TabBar">
			<!--<Setter Property="um:ControlExtensions.Elevation" Value="1" />-->
			<Setter Property="Width" Value="80" />
			<Setter Property="Height" Value="320" />
			<Setter Property="CornerRadius" Value="40" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="MinWidth" Value="{ThemeResource NavigationTabBarWidthOrHeight}" />
			<Setter Property="utu:SafeArea.Insets" Value="VisibleBounds" />
			<Setter Property="ItemContainerStyle" Value="{StaticResource NmpBaseNavigationTabBarItemStyle}" />
			<Setter Property="Orientation" Value="Vertical" />
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<utu:TabBarListPanel Orientation="Vertical" />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="NmpBottomTabBarStyle"
			   BasedOn="{StaticResource NmpBaseTabBarStyle}"
			   TargetType="utu:TabBar">
			<!--<Setter Property="um:ControlExtensions.Elevation" Value="1" />-->
			<Setter Property="VerticalAlignment" Value="Bottom" />
			<Setter Property="MinHeight" Value="{ThemeResource NavigationTabBarWidthOrHeight}" />
			<Setter Property="utu:SafeArea.Insets" Value="Bottom" />
			<Setter Property="ItemContainerStyle" Value="{StaticResource NmpBaseNavigationTabBarItemStyle}" />
		</Style>

		<Style x:Key="NmpTopTabBarStyle"
			   BasedOn="{StaticResource NmpBaseTabBarStyle}"
			   TargetType="utu:TabBar">
			<Setter Property="CornerRadius" Value="40" />
			<Setter Property="VerticalAlignment" Value="Top" />
			<Setter Property="MinHeight" Value="{ThemeResource TopTabBarHeight}" />
			<Setter Property="utu:SafeArea.Insets" Value="Top" />
			<Setter Property="ItemContainerStyle" Value="{StaticResource NmpBaseContentTabBarItemStyle}" />
			<!--<Setter Property="SelectionIndicatorContentTemplate">
				<Setter.Value>
					<DataTemplate>
						<Border Height="2"
								Margin="0,0,0,1"
								VerticalAlignment="Bottom"
								Background="{ThemeResource TopTabBarBottomBorderBrush}" />
					</DataTemplate>
				</Setter.Value>
			</Setter>-->
		</Style>

		<!--#region TabBarItem-->
		<converters:FromNullToValueConverter x:Key="HasIconToContentShadow"
											 NotNullValue="{StaticResource TabBarItemNoShadows}"
											 NullValue="{StaticResource TabBarItemShadows}" />
		<utu:ShadowCollection x:Key="TabBarItemShadows">
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="4" OffsetY="4" Opacity="0.4" Spread="0" Color="{StaticResource ShadeShadowColor1}" />
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="-4" OffsetY="-4" Opacity="0.4" Spread="0" Color="{StaticResource LightShadowColor1}" />
		</utu:ShadowCollection>
		
		<utu:ShadowCollection x:Key="TabBarItemNoShadows"/>

		<Style x:Key="NmpBaseNavigationTabBarItemStyle"
			   TargetType="utu:TabBarItem">
			<Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
			<Setter Property="FontSize" Value="{ThemeResource LabelMediumFontSize}" />
			<Setter Property="FontWeight" Value="{ThemeResource LabelMediumFontWeight}" />
			<Setter Property="UseSystemFocusVisuals" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
			<Setter Property="Foreground" Value="{ThemeResource OnSurfaceVariantBrush}" />
			<Setter Property="Padding" Value="{ThemeResource NavigationTabBarItemPadding}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="utu:TabBarItem">
						<Grid x:Name="LayoutRoot"
							  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalAlignment}"
							  Background="{TemplateBinding Background}"
							  Control.IsTemplateFocusTarget="True"
							  Padding="{TemplateBinding Padding}"
							  AutomationProperties.AccessibilityView="Raw"
							  CornerRadius="{TemplateBinding CornerRadius}">

							<Rectangle x:Name="PointerRectangle"
										Fill="{ThemeResource NavigationTabBarItemPointerFillBrush}"
										Visibility="Collapsed" />

							<Grid x:Name="ContentGrid"
								  RowSpacing="4">
								<Grid.RowDefinitions>
									<RowDefinition x:Name="IconRow" Height="*" />
									<RowDefinition x:Name="ContentRow" Height="Auto" />
								</Grid.RowDefinitions>

								<utu:ShadowContainer x:Name="IconShadowPanel">
									<Grid x:Name="ActiveIndicator"
										  Width="{ThemeResource NavigationTabBarItemActiveIndicatorWidth}"
										  Height="{ThemeResource NavigationTabBarItemActiveIndicatorHeight}"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  CornerRadius="{ThemeResource NavigationTabBarItemActiveIndicatorCornerRadius}">
                                        
										<Border Width="{ThemeResource NavigationTabBarItemIconHeight}"
												Height="{ThemeResource NavigationTabBarItemIconHeight}"
												HorizontalAlignment="Center"
												VerticalAlignment="Center">
											<Viewbox x:Name="IconBox" HorizontalAlignment="Center">
												<ContentPresenter x:Name="Icon"
																  Content="{TemplateBinding Icon}"
																  Foreground="{TemplateBinding Foreground}" />
                                                    
											</Viewbox>
										</Border>

										<!--  BADGE  -->
										<!--  This part can be replaced when InfoBadge will be available in WinUI3  -->
										<!--  See this commit for the implementation: c935919b2c390014dd8509cc50e16b1549511ffa  -->
										<!--  (Related Branch: dev/agzi/I274-InfoBadgeImplementationForTBI)  -->

										<Grid Visibility="{TemplateBinding BadgeVisibility}">
											<!--  Small Badge  -->
											<Ellipse Width="{ThemeResource NavigationTabBarItemSmallBadgeWidth}"
													 Height="{ThemeResource NavigationTabBarItemSmallBadgeHeight}"
													 Margin="{ThemeResource NavigationTabBarItemSmallBadgeMargin}"
													 HorizontalAlignment="Right"
													 VerticalAlignment="Top"
													 Fill="{ThemeResource NavigationTabBarItemErrorBrush}"
													 Visibility="{Binding BadgeValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToVisible}}" />

                                               
											<!--  Large Badge  -->
											<Border Height="{ThemeResource NavigationTabBarItemLargeBadgeHeight}"
													MinWidth="{ThemeResource NavigationTabBarItemLargeBadgeMinWidth}"
													Margin="{ThemeResource NavigationTabBarItemLargeBadgeMargin}"
													Padding="{ThemeResource NavigationTabBarItemLargeBadgePadding}"
													HorizontalAlignment="Left"
													VerticalAlignment="Top"
													Background="{ThemeResource NavigationTabBarItemErrorBrush}"
													CornerRadius="{ThemeResource NavigationTabBarItemLargeBadgeCornerRadius}"
													Visibility="{Binding BadgeValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}">
                                               
												<TextBlock HorizontalAlignment="Center"
														   VerticalAlignment="Center"
														   Foreground="{ThemeResource NavigationTabBarItemOnErrorBrush}"
														   MaxLines="1"
														   Style="{StaticResource LabelExtraSmall}"
														   Text="{TemplateBinding BadgeValue}"
														   TextAlignment="Center" />
                                                   
											</Border>
										</Grid>
									</Grid>
								</utu:ShadowContainer>
								
								<utu:ShadowContainer x:Name="ContentShadowPanel"
													 Grid.Row="1">
									<Grid x:Name="ContentPresenterGrid"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center">
										<Border HorizontalAlignment="Center"
												VerticalAlignment="Center">
											<ContentPresenter x:Name="ContentPresenter"
															  Content="{TemplateBinding Content}"
															  FontFamily="{TemplateBinding FontFamily}"
															  FontSize="{TemplateBinding FontSize}"
															  FontWeight="{TemplateBinding FontWeight}"
															  Foreground="{TemplateBinding Foreground}"
															  TextWrapping="NoWrap"
															  HorizontalAlignment="Center"
															  VerticalAlignment="Center"/>
										</Border>
									</Grid>
								</utu:ShadowContainer>
							</Grid>

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="PointerStates">
									<VisualState x:Name="Normal" />
									<not_mobile:VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
										</VisualState.Setters>
									</not_mobile:VisualState>
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Selected">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
											<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										</VisualState.Setters>
									</VisualState>
									<not_mobile:VisualState x:Name="PointerOverSelected">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
											<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										</VisualState.Setters>
									</not_mobile:VisualState>
									<VisualState x:Name="PressedSelected">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
											<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="DisabledStates">
									<VisualState x:Name="Enabled" />
									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationTabBarBackgroundDisabled}" />
											<Setter Target="ActiveIndicator.Background" Value="{ThemeResource NavigationTabBarItemActiveIndicatorBackgroundDisabled}" />
											<Setter Target="Icon.Foreground" Value="{ThemeResource NavigationTabBarItemIconForegroundDisabled}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationTabBarForegroundDisabled}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="TabBarIconPositionStates">
									<VisualState x:Name="IconOnTop"/>
									<VisualState x:Name="IconOnly">
										<VisualState.Setters>
											<Setter Target="ContentShadowPanel.Visibility" Value="Collapsed" />
											<Setter Target="ContentGrid.RowSpacing" Value="0" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="ContentOnly">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Visibility" Value="Collapsed" />
											<Setter Target="ContentPresenterGrid.Height" Value="{ThemeResource NavigationTabBarItemActiveIndicatorHeight}" />
											<Setter Target="ContentPresenterGrid.Width" Value="{ThemeResource NavigationTabBarItemActiveIndicatorWidth}" />
											<Setter Target="ContentPresenterGrid.CornerRadius" Value="{ThemeResource NavigationTabBarItemActiveIndicatorCornerRadius}" />
											<Setter Target="ContentPresenter.HorizontalAlignment" Value="Center" />
											<Setter Target="ContentPresenter.VerticalAlignment" Value="Center" />
											<Setter Target="IconRow.Height" Value="0" />
											<Setter Target="ContentRow.Height" Value="*" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<!--#region FAB TabBarItem Styles-->

		<!--WORK IN PROGRESS-->
		<Style x:Key="NmpBaseContentTabBarItemStyle"
			   TargetType="utu:TabBarItem">
			<Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
			<Setter Property="FontSize" Value="{ThemeResource LabelMediumFontSize}" />
			<Setter Property="FontWeight" Value="{ThemeResource LabelMediumFontWeight}" />
			<Setter Property="UseSystemFocusVisuals" Value="True" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
			<Setter Property="Foreground" Value="{ThemeResource OnSurfaceVariantBrush}" />
			<Setter Property="Padding" Value="{ThemeResource NavigationTabBarItemPadding}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="utu:TabBarItem">
						<Grid x:Name="LayoutRoot"
							  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalAlignment}"
							  Background="{TemplateBinding Background}"
							  Control.IsTemplateFocusTarget="True"
							  Padding="{TemplateBinding Padding}"
							  AutomationProperties.AccessibilityView="Raw"
							  CornerRadius="{TemplateBinding CornerRadius}">

							<Rectangle x:Name="PointerRectangle"
										Fill="{ThemeResource NavigationTabBarItemPointerFillBrush}"
										Visibility="Collapsed" />

							<Grid x:Name="ContentGrid"
								  RowSpacing="4">
								<Grid.RowDefinitions>
									<RowDefinition x:Name="IconRow" Height="*" />
									<RowDefinition x:Name="ContentRow" Height="Auto" />
								</Grid.RowDefinitions>

								<utu:ShadowContainer x:Name="IconShadowPanel">
									<Grid x:Name="ActiveIndicator"
										  Width="{ThemeResource NavigationTabBarItemActiveIndicatorWidth}"
										  Height="{ThemeResource NavigationTabBarItemActiveIndicatorHeight}"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  CornerRadius="{ThemeResource NavigationTabBarItemActiveIndicatorCornerRadius}">

										<Border Width="{ThemeResource NavigationTabBarItemIconHeight}"
												Height="{ThemeResource NavigationTabBarItemIconHeight}"
												HorizontalAlignment="Center"
												VerticalAlignment="Center">
											<Viewbox x:Name="IconBox" HorizontalAlignment="Center">
												<ContentPresenter x:Name="Icon"
																  Content="{TemplateBinding Icon}"
																  Foreground="{TemplateBinding Foreground}" />

											</Viewbox>
										</Border>

										<!--  BADGE  -->
										<!--  This part can be replaced when InfoBadge will be available in WinUI3  -->
										<!--  See this commit for the implementation: c935919b2c390014dd8509cc50e16b1549511ffa  -->
										<!--  (Related Branch: dev/agzi/I274-InfoBadgeImplementationForTBI)  -->

										<Grid Visibility="{TemplateBinding BadgeVisibility}">
											<!--  Small Badge  -->
											<Ellipse Width="{ThemeResource NavigationTabBarItemSmallBadgeWidth}"
													 Height="{ThemeResource NavigationTabBarItemSmallBadgeHeight}"
													 Margin="{ThemeResource NavigationTabBarItemSmallBadgeMargin}"
													 HorizontalAlignment="Right"
													 VerticalAlignment="Top"
													 Fill="{ThemeResource NavigationTabBarItemErrorBrush}"
													 Visibility="{Binding BadgeValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToVisible}}" />


											<!--  Large Badge  -->
											<Border Height="{ThemeResource NavigationTabBarItemLargeBadgeHeight}"
													MinWidth="{ThemeResource NavigationTabBarItemLargeBadgeMinWidth}"
													Margin="{ThemeResource NavigationTabBarItemLargeBadgeMargin}"
													Padding="{ThemeResource NavigationTabBarItemLargeBadgePadding}"
													HorizontalAlignment="Left"
													VerticalAlignment="Top"
													Background="{ThemeResource NavigationTabBarItemErrorBrush}"
													CornerRadius="{ThemeResource NavigationTabBarItemLargeBadgeCornerRadius}"
													Visibility="{Binding BadgeValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyOrNullToCollapsed}}">

												<TextBlock HorizontalAlignment="Center"
														   VerticalAlignment="Center"
														   Foreground="{ThemeResource NavigationTabBarItemOnErrorBrush}"
														   MaxLines="1"
														   Style="{StaticResource LabelExtraSmall}"
														   Text="{TemplateBinding BadgeValue}"
														   TextAlignment="Center" />

											</Border>
										</Grid>
									</Grid>
								</utu:ShadowContainer>

								<utu:ShadowContainer x:Name="ContentShadowPanel"
													 Grid.Row="1">
									<Grid x:Name="ContentPresenterGrid"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center">
										<Border HorizontalAlignment="Center"
												VerticalAlignment="Center">
											<ContentPresenter x:Name="ContentPresenter"
															  Content="{TemplateBinding Content}"
															  FontFamily="{TemplateBinding FontFamily}"
															  FontSize="{TemplateBinding FontSize}"
															  FontWeight="{TemplateBinding FontWeight}"
															  Foreground="{TemplateBinding Foreground}"
															  TextWrapping="NoWrap"
															  HorizontalAlignment="Center"
															  VerticalAlignment="Center"/>
										</Border>
									</Grid>
								</utu:ShadowContainer>
							</Grid>

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="PointerStates">
									<VisualState x:Name="Normal" />
									<not_mobile:VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
										</VisualState.Setters>
									</not_mobile:VisualState>
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Selected">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
											<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										</VisualState.Setters>
									</VisualState>
									<not_mobile:VisualState x:Name="PointerOverSelected">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
											<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										</VisualState.Setters>
									</not_mobile:VisualState>
									<VisualState x:Name="PressedSelected">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Shadows" Value="{StaticResource TabBarItemShadows}" />
											<Setter Target="ContentShadowPanel.Shadows" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToContentShadow}}" />
											<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="DisabledStates">
									<VisualState x:Name="Enabled" />
									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationTabBarBackgroundDisabled}" />
											<Setter Target="ActiveIndicator.Background" Value="{ThemeResource NavigationTabBarItemActiveIndicatorBackgroundDisabled}" />
											<Setter Target="Icon.Foreground" Value="{ThemeResource NavigationTabBarItemIconForegroundDisabled}" />
											<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationTabBarForegroundDisabled}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="TabBarIconPositionStates">
									<VisualState x:Name="IconOnTop"/>
									<VisualState x:Name="IconOnly">
										<VisualState.Setters>
											<Setter Target="ContentShadowPanel.Visibility" Value="Collapsed" />
											<Setter Target="ContentGrid.RowSpacing" Value="0" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="ContentOnly">
										<VisualState.Setters>
											<Setter Target="IconShadowPanel.Visibility" Value="Collapsed" />
											<Setter Target="ContentPresenterGrid.Height" Value="{ThemeResource NavigationTabBarItemActiveIndicatorHeight}" />
											<Setter Target="ContentPresenterGrid.Width" Value="{ThemeResource NavigationTabBarItemActiveIndicatorWidth}" />
											<Setter Target="ContentPresenterGrid.CornerRadius" Value="{ThemeResource NavigationTabBarItemActiveIndicatorCornerRadius}" />
											<Setter Target="ContentPresenter.HorizontalAlignment" Value="Center" />
											<Setter Target="ContentPresenter.VerticalAlignment" Value="Center" />
											<Setter Target="IconRow.Height" Value="0" />
											<Setter Target="ContentRow.Height" Value="*" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<utu:ShadowCollection x:Key="FabTabBarItemShadows">
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="-8" OffsetY="-8" Opacity="0.08" Spread="0" Color="{StaticResource ShadeShadowColor5}" />
			<utu:Shadow BlurRadius="8" IsInner="True" OffsetX="8" OffsetY="8" Opacity="0.4" Spread="0" Color="{StaticResource LightShadowColor5}" />
			<utu:Shadow BlurRadius="20" IsInner="False" OffsetX="12" OffsetY="12" Opacity="0.4" Spread="0" Color="{StaticResource MediumShadowColor5}" />
		</utu:ShadowCollection>
		
		<Style x:Key="NmpFabTabBarItemStyle"
			   TargetType="utu:TabBarItem">
			<Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
			<Setter Property="FontSize" Value="{ThemeResource LabelMediumFontSize}" />
			<Setter Property="FontWeight" Value="{ThemeResource LabelMediumFontWeight}" />
			<Setter Property="IsSelectable" Value="False" />
			<Setter Property="UseSystemFocusVisuals" Value="True" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="CornerRadius" Value="64" />
			<Setter Property="Padding" Value="{ThemeResource FabTabBarItemPadding}" />
			<!--<Setter Property="Margin" Value="0,0,0,130" />-->
			<Setter Property="Background" Value="{ThemeResource PrimaryContainerColor}" />
			<Setter Property="Foreground" Value="{ThemeResource OnPrimaryContainerColor}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="utu:TabBarItem">
						<utu:ShadowContainer Shadows="{StaticResource FabTabBarItemShadows}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="StateOverlay.Background" Value="{ThemeResource PrimaryFocusedBrush}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="StateOverlay.Background" Value="{ThemeResource PrimaryPressedBrush}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="Disabled" />

								</VisualStateGroup>

								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<VisualState.Setters>
											<Setter Target="StateOverlay.Background" Value="{ThemeResource PrimaryFocusedBrush}" />
										</VisualState.Setters>
									</VisualState>
									<VisualState x:Name="PointerFocused" />
									<VisualState x:Name="Unfocused" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="Root"
								  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								  VerticalAlignment="{TemplateBinding VerticalAlignment}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  Background="{TemplateBinding Background}">
								
								<Grid>
									<StackPanel x:Name="ContentPanel"
												Margin="{TemplateBinding Padding}"
												Orientation="Horizontal">

										<!--  Icon  -->
										<Viewbox Width="{ThemeResource FabTabBarItemContentWidthOrHeight}"
													Height="{ThemeResource FabTabBarItemContentWidthOrHeight}"
													HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">

											<ContentPresenter x:Name="IconPresenter"
																Content="{TemplateBinding Icon}"
																Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />

										</Viewbox>

										<!--  Icon/Content spacing  -->
										<Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<Border Width="{ThemeResource FabTabBarItemIconTextPadding}"
													Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
										</Border>

										<!--  Content  -->
										<ContentPresenter x:Name="ContentPresenter"
															HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
															VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
															Content="{TemplateBinding Content}"
															ContentTemplate="{TemplateBinding ContentTemplate}"
															ContentTransitions="{TemplateBinding ContentTransitions}"
															FontFamily="{TemplateBinding FontFamily}"
															FontSize="{TemplateBinding FontSize}"
															FontWeight="{TemplateBinding FontWeight}" />

									</StackPanel>
								</Grid>
								<Border x:Name="StateOverlay"
										Background="Transparent"
										CornerRadius="{TemplateBinding CornerRadius}" />

								</Grid>
						</utu:ShadowContainer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--#endregion-->
		
		<!--#endregion-->
		
		<!--#endregion-->

	</Page.Resources>

	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<sample:SamplePageLayout x:Name="SamplePageLayout" IsDesignAgnostic="True">
			<sample:SamplePageLayout.DesignAgnosticTemplate>
				<DataTemplate>
					<ScrollViewer HorizontalScrollMode="Disabled">
						<StackPanel>

							<TextBlock Margin="0,24,0,0"
							           Style="{StaticResource TitleTextBlockStyle}"
							           Text="Filled Button" />
							<StackPanel Width="550"
							            Margin="0,32"
							            Padding="32"
							            Background="{StaticResource PrimaryColor}"
							            CornerRadius="30">

								<StackPanel Margin="0,30,0,0"
								            Padding="24"
								            HorizontalAlignment="Center"
								            Spacing="30">

									<Button Style="{StaticResource NmpFilledButtonStyle}" Content="Filled">
										<um:ControlExtensions.Icon>
											<PathIcon Data="M16 9.14286H9.14286V16H6.85714V9.14286H0V6.85714H6.85714V0H9.14286V6.85714H16V9.14286Z" />
										</um:ControlExtensions.Icon>
									</Button>

									<Button Style="{StaticResource NmpFilledButtonStyle}" Content="Disabled"
											IsEnabled="False">
										<um:ControlExtensions.Icon>
											<PathIcon Data="M16 9.14286H9.14286V16H6.85714V9.14286H0V6.85714H6.85714V0H9.14286V6.85714H16V9.14286Z" />
										</um:ControlExtensions.Icon>
									</Button>

								</StackPanel>
							</StackPanel>

							<TextBlock Margin="0,24,0,0"
							           Style="{StaticResource TitleTextBlockStyle}"
							           Text="Elevated Button" />

							<StackPanel Width="550"
							            Margin="0,32"
							            Padding="32"
							            Background="{StaticResource SurfaceColor}"
							            CornerRadius="30">

								<StackPanel Margin="0,30,0,0"
								            Padding="24"
								            HorizontalAlignment="Center"
								            Spacing="30">

									<Button Style="{StaticResource NmpElevatedButtonStyle}" Content="Elevated">
										<um:ControlExtensions.Icon>
											<PathIcon Data="M16 9.14286H9.14286V16H6.85714V9.14286H0V6.85714H6.85714V0H9.14286V6.85714H16V9.14286Z" />
										</um:ControlExtensions.Icon>
									</Button>

									<Button Style="{StaticResource NmpElevatedButtonStyle}" Content="Disabled"
											IsEnabled="False">
										<um:ControlExtensions.Icon>
											<PathIcon Data="M16 9.14286H9.14286V16H6.85714V9.14286H0V6.85714H6.85714V0H9.14286V6.85714H16V9.14286Z" />
										</um:ControlExtensions.Icon>
									</Button>
								</StackPanel>
							</StackPanel>

							<TextBlock Margin="0,24,0,0"
							           Style="{StaticResource TitleTextBlockStyle}"
							           Text="FAB" />

							<StackPanel Width="550"
							            Margin="0,32"
							            Padding="32"
							            Background="{StaticResource SurfaceColor}"
							            CornerRadius="30">

								<StackPanel Margin="0,30,0,0"
											Padding="24"
											HorizontalAlignment="Center"
											Spacing="30">

									<Button Style="{StaticResource NmpFabSmallStyle}"
											Content="Create">
										<um:ControlExtensions.Icon>
											<PathIcon Data="M16.667 9.14286H9.80985V16H7.52414V9.14286H0.666992V6.85714H7.52414V0H9.80985V6.85714H16.667V9.14286Z" />
										</um:ControlExtensions.Icon>
									</Button>

									<Button Style="{StaticResource NmpFabStyle}"
											Content="Create">
										<um:ControlExtensions.Icon>
											<PathIcon Data="M16.667 9.14286H9.80985V16H7.52414V9.14286H0.666992V6.85714H7.52414V0H9.80985V6.85714H16.667V9.14286Z" />
										</um:ControlExtensions.Icon>
									</Button>

									<Button Style="{StaticResource NmpFabLargeStyle}">
										<um:ControlExtensions.Icon>
											<PathIcon Data="M24.334 13.7143H14.0483V24H10.6197V13.7143H0.333984V10.2857H10.6197V0H14.0483V10.2857H24.334V13.7143Z" />
										</um:ControlExtensions.Icon>
									</Button>
								</StackPanel>
							</StackPanel>

							<TextBlock Margin="0,24,0,0"
							           Style="{StaticResource TitleTextBlockStyle}"
							           Text="ToggleButton" />

							<StackPanel Width="550"
							            Margin="0,32"
							            Padding="32"
							            Background="{StaticResource SurfaceColor}"
							            CornerRadius="30">

								<StackPanel Margin="0,30,0,0"
								            Padding="24"
								            HorizontalAlignment="Center"
								            Spacing="30">

									<ToggleButton Style="{StaticResource NmpToggleButtonStyle}">
										<ToggleButton.Content>
											<PathIcon Data="M8 14.5L14 10L8 5.5V14.5ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18Z" />
										</ToggleButton.Content>
										<um:ControlExtensions.AlternateContent>
											<PathIcon Data="M7 14H9V6H7V14ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18ZM11 14H13V6H11V14Z" />
										</um:ControlExtensions.AlternateContent>
									</ToggleButton>

									<ToggleButton Style="{StaticResource NmpToggleButtonStyle}"
												  IsEnabled="False">
										<ToggleButton.Content>
											<PathIcon Data="M8 14.5L14 10L8 5.5V14.5ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18Z" />
										</ToggleButton.Content>
										<um:ControlExtensions.AlternateContent>
											<PathIcon Data="M7 14H9V6H7V14ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18ZM11 14H13V6H11V14Z" />
										</um:ControlExtensions.AlternateContent>
									</ToggleButton>

									<ToggleButton Style="{StaticResource NmpToggleButtonStyle}"
												  IsEnabled="False"
												  IsChecked="True">
										<ToggleButton.Content>
											<PathIcon Data="M8 14.5L14 10L8 5.5V14.5ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18Z" />
										</ToggleButton.Content>
										<um:ControlExtensions.AlternateContent>
											<PathIcon Data="M7 14H9V6H7V14ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18ZM11 14H13V6H11V14Z" />
										</um:ControlExtensions.AlternateContent>
									</ToggleButton>

								</StackPanel>
							</StackPanel>

							<TextBlock Margin="0,24,0,0"
							           Style="{StaticResource TitleTextBlockStyle}"
							           Text="IconButton" />

							<StackPanel Width="550"
							            Margin="0,32"
							            Padding="32"
							            Background="{StaticResource SurfaceColor}"
							            CornerRadius="30">

								<StackPanel Margin="0,30,0,0"
								            Padding="24"
								            HorizontalAlignment="Center"
								            Spacing="30">

									<Button Style="{StaticResource NmpIconButtonStyle}">
										<Button.Content>
											<PathIcon Data="M0 12H18V10H0V12ZM0 7H18V5H0V7ZM0 0V2H18V0H0Z" />
										</Button.Content>
									</Button>

									<Button Style="{StaticResource NmpIconButtonStyle}"
											IsEnabled="False">
										<Button.Content>
											<PathIcon Data="M0 12H18V10H0V12ZM0 7H18V5H0V7ZM0 0V2H18V0H0Z" />
										</Button.Content>
									</Button>

								</StackPanel>
							</StackPanel>

							<TextBlock Margin="0,24,0,0"
							           Style="{StaticResource TitleTextBlockStyle}"
							           Text="Combobox" />

							<StackPanel Width="550"
							            Margin="0,32"
							            Padding="32"
							            Background="{StaticResource SurfaceColor}"
							            CornerRadius="30">

								<StackPanel Margin="0,30,0,0"
											Padding="24"
											HorizontalAlignment="Center"
											Spacing="30">

									<ComboBox Style="{StaticResource NmpComboBoxStyle}"
											  PlaceholderText="ComboBox"
											  ItemsSource="{Binding Data.CbbItems}">
										<um:ControlExtensions.Icon>
											<PathIcon Data="F1 M 18 0 L 2 0 C 0.8999999761581421 0 0.009999990463256836 0.8999999761581421 0.009999990463256836 2 L 0 14 C 0 15.100000023841858 0.8999999761581421 16 2 16 L 18 16 C 19.100000023841858 16 20 15.100000023841858 20 14 L 20 2 C 20 0.8999999761581421 19.100000023841858 0 18 0 Z M 18 4 L 10 9 L 2 4 L 2 2 L 10 7 L 18 2 L 18 4 Z" />
										</um:ControlExtensions.Icon>
									</ComboBox>

									<ComboBox Style="{StaticResource NmpComboBoxStyle}"
											  PlaceholderText="Disabled"
											  ItemsSource="{Binding Data.CbbItems}"
											  IsEnabled="False">
										<um:ControlExtensions.Icon>
											<PathIcon Data="F1 M 18 0 L 2 0 C 0.8999999761581421 0 0.009999990463256836 0.8999999761581421 0.009999990463256836 2 L 0 14 C 0 15.100000023841858 0.8999999761581421 16 2 16 L 18 16 C 19.100000023841858 16 20 15.100000023841858 20 14 L 20 2 C 20 0.8999999761581421 19.100000023841858 0 18 0 Z M 18 4 L 10 9 L 2 4 L 2 2 L 10 7 L 18 2 L 18 4 Z" />
										</um:ControlExtensions.Icon>
									</ComboBox>
								</StackPanel>
							</StackPanel>

							<TextBlock Margin="0,24,0,0"
							           Style="{StaticResource TitleTextBlockStyle}"
							           Text="Chips" />

							<StackPanel Width="550"
							            Margin="0,32"
							            Padding="32"
							            Background="{StaticResource SurfaceColor}"
							            CornerRadius="30">

								<StackPanel Margin="0,30,0,0"
											Padding="24"
											HorizontalAlignment="Center"
											Spacing="30">

									<utu:Chip Style="{StaticResource NmpChipStyle}"
											  Content="Enabled"/>

									<utu:Chip Style="{StaticResource NmpChipStyle}"
											  Content="Enabled">
										<utu:Chip.Icon>
											<PathIcon Data="M14 0H2C1.175 0 0.5075 0.675 0.5075 1.5L0.5 10.5C0.5 11.325 1.175 12 2 12H14C14.825 12 15.5 11.325 15.5 10.5V1.5C15.5 0.675 14.825 0 14 0ZM14 10.5H2V3L8 6.75L14 3V10.5ZM8 5.25L2 1.5H14L8 5.25Z"/>
										</utu:Chip.Icon>
									</utu:Chip>
									<utu:Chip Style="{StaticResource NmpChipStyle}"
											  Content="Remove"
											  CanRemove="True">
										<utu:Chip.Icon>
											<PathIcon Data="M14 0H2C1.175 0 0.5075 0.675 0.5075 1.5L0.5 10.5C0.5 11.325 1.175 12 2 12H14C14.825 12 15.5 11.325 15.5 10.5V1.5C15.5 0.675 14.825 0 14 0ZM14 10.5H2V3L8 6.75L14 3V10.5ZM8 5.25L2 1.5H14L8 5.25Z"/>
										</utu:Chip.Icon>
									</utu:Chip>
									<utu:Chip Style="{StaticResource NmpChipStyle}"
											  Content="Disabled"
											  IsEnabled="False">
										<utu:Chip.Icon>
											<PathIcon Data="M14 0H2C1.175 0 0.5075 0.675 0.5075 1.5L0.5 10.5C0.5 11.325 1.175 12 2 12H14C14.825 12 15.5 11.325 15.5 10.5V1.5C15.5 0.675 14.825 0 14 0ZM14 10.5H2V3L8 6.75L14 3V10.5ZM8 5.25L2 1.5H14L8 5.25Z"/>
										</utu:Chip.Icon>
									</utu:Chip>
								</StackPanel>
							</StackPanel>

							<TextBlock Margin="0,24,0,0"
							           Style="{StaticResource TitleTextBlockStyle}"
							           Text="TabBar" />

							<StackPanel Width="550"
							            Margin="0,32"
							            Padding="32"
							            Background="{StaticResource SurfaceBrush}"
							            CornerRadius="30">

								<StackPanel Margin="0,30,0,0"
											Padding="24"
											HorizontalAlignment="Center"
											Spacing="30">

									<utu:TabBar SelectedIndex="1"
												Style="{StaticResource NmpTopTabBarStyle}">
										<utu:TabBar.Items>
											<utu:TabBarItem Content="HOME">
												<utu:TabBarItem.Icon>
													<SymbolIcon Symbol="Home" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem Content="SUPPORT">
												<utu:TabBarItem.Icon>
													<FontIcon Glyph="&#xE8F2;" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem Content="ABOUT">
												<utu:TabBarItem.Icon>
													<FontIcon Glyph="&#xE946;" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
										</utu:TabBar.Items>
									</utu:TabBar>
									
									<utu:TabBar SelectedIndex="1"
												Style="{StaticResource NmpBottomTabBarStyle}">
										<utu:TabBar.Items>
											<utu:TabBarItem Content="HOME">
												<utu:TabBarItem.Icon>
													<SymbolIcon Symbol="Home" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem Content="SUPPORT">
												<utu:TabBarItem.Icon>
													<FontIcon Glyph="&#xE8F2;" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem Content="ABOUT">
												<utu:TabBarItem.Icon>
													<FontIcon Glyph="&#xE946;" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
										</utu:TabBar.Items>
									</utu:TabBar>

									<utu:TabBar SelectedIndex="1"
												Style="{StaticResource NmpVerticalTabBarStyle}">
										<utu:TabBar.Items>
											<utu:TabBarItem Content="HOME">
												<utu:TabBarItem.Icon>
													<SymbolIcon Symbol="Home" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem Content="SUPPORT">
												<utu:TabBarItem.Icon>
													<FontIcon Glyph="&#xE8F2;" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem Content="ABOUT">
												<utu:TabBarItem.Icon>
													<FontIcon Glyph="&#xE946;" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
										</utu:TabBar.Items>
									</utu:TabBar>

									<utu:TabBar SelectedIndex="1"
												Style="{StaticResource NmpBottomTabBarStyle}">
										<utu:TabBar.Items>
											<utu:TabBarItem Content="HOME"/>
											<utu:TabBarItem Content="SUPPORT"/>
											<utu:TabBarItem Content="ABOUT"/>
										</utu:TabBar.Items>
									</utu:TabBar>

									<utu:TabBar SelectedIndex="1"
												Style="{StaticResource NmpBottomTabBarStyle}">
										<utu:TabBar.Items>
											<utu:TabBarItem>
												<utu:TabBarItem.Icon>
													<SymbolIcon Symbol="Home" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem>
												<utu:TabBarItem.Icon>
													<FontIcon Glyph="&#xE8F2;" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem>
												<utu:TabBarItem.Icon>
													<FontIcon Glyph="&#xE946;" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
										</utu:TabBar.Items>
									</utu:TabBar>
									<utu:TabBar SelectedIndex="1"
												Style="{StaticResource NmpBottomTabBarStyle}">
										<utu:TabBar.Items>
											<utu:TabBarItem>
												<utu:TabBarItem.Icon>
													<SymbolIcon Symbol="Home" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem Style="{StaticResource NmpFabTabBarItemStyle}">
												<utu:TabBarItem.Flyout>
													<MenuFlyout Placement="Top"
																MenuFlyoutPresenterStyle="{StaticResource MaterialMenuFlyoutPresenterStyle}">

														<MenuFlyoutItem Text="Like"
															Style="{StaticResource MaterialMenuFlyoutItemStyle}">
															<MenuFlyoutItem.Icon>
																<SymbolIcon Symbol="Like" />
															</MenuFlyoutItem.Icon>
														</MenuFlyoutItem>

														<MenuFlyoutItem Text="Dislike"
															Style="{StaticResource MaterialMenuFlyoutItemStyle}">
															<MenuFlyoutItem.Icon>
																<SymbolIcon Symbol="Dislike" />
															</MenuFlyoutItem.Icon>
														</MenuFlyoutItem>
													</MenuFlyout>
												</utu:TabBarItem.Flyout>
												<utu:TabBarItem.Icon>
													<PathIcon Data="M16.2227 9.14286H9.36551V16H7.0798V9.14286H0.222656V6.85714H7.0798V0H9.36551V6.85714H16.2227V9.14286Z"/>
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
											<utu:TabBarItem>
												<utu:TabBarItem.Icon>
													<FontIcon Glyph="&#xE946;" />
												</utu:TabBarItem.Icon>
											</utu:TabBarItem>
										</utu:TabBar.Items>
									</utu:TabBar>
								</StackPanel>
							</StackPanel>

						</StackPanel>
					</ScrollViewer>
				</DataTemplate>
			</sample:SamplePageLayout.DesignAgnosticTemplate>
		</sample:SamplePageLayout>
	</Grid>
</Page>
