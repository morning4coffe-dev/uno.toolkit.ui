<Page x:Class="Uno.Toolkit.Samples.Content.Controls.ShadowContainerSamplePage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:converters="using:Uno.Toolkit.Samples.Converters"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:local="using:Uno.Toolkit.Samples.Content.Controls"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:sample="using:Uno.Toolkit.Samples"
	  xmlns:utu="using:Uno.Toolkit.UI"
	  xmlns:um="using:Uno.Material"
	  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
	  mc:Ignorable="d">
	<Page.Resources>
		<ResourceDictionary>
			<ResourceDictionary.ThemeDictionaries>
				<ResourceDictionary x:Key="Default">
					<Color x:Key="LocalSurfaceColor">#F0F0F3</Color>
					<!--<StaticResource x:Key="LocalSurfaceColor" ResourceKey="SurfaceColor" />-->
					<SolidColorBrush x:Key="LocalSurfaceBrush" Color="{StaticResource LocalSurfaceColor}" />
				</ResourceDictionary>
				<ResourceDictionary x:Key="Light">
					<Color x:Key="LocalSurfaceColor">#F0F0F3</Color>
					<!--<StaticResource x:Key="LocalSurfaceColor" ResourceKey="SurfaceColor" />-->
					<SolidColorBrush x:Key="LocalSurfaceBrush" Color="{StaticResource LocalSurfaceColor}" />
				</ResourceDictionary>
			</ResourceDictionary.ThemeDictionaries>

			<!-- JM's values for reference -->
			<utu:ShadowCollection x:Key="NeumorphismRaising">
				<utu:Shadow BlurRadius="30" OffsetX="10" OffsetY="10" Opacity="1" Spread="-5" Color="#6858d3" />
				<utu:Shadow BlurRadius="30" OffsetX="-10" OffsetY="-10" Opacity="1" Spread="-5" Color="#8c76ff" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="NeumorphismHollow">
				<utu:Shadow BlurRadius="10" IsInner="True" OffsetX="5" OffsetY="5" Opacity="1" Spread="0" Color="#6858d3" />
				<utu:Shadow BlurRadius="10" IsInner="True" OffsetX="-4" OffsetY="-4" Opacity="1" Spread="0" Color="#8c76ff" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="NeumorphismBulging">
				<utu:Shadow BlurRadius="10" IsInner="True" OffsetX="-5" OffsetY="-5" Opacity="1" Spread="0" Color="#6858d3" />
				<utu:Shadow BlurRadius="10" IsInner="True" OffsetX="4" OffsetY="4" Opacity="1" Spread="0" Color="#8c76ff" />
			</utu:ShadowCollection>

			<!-- theme to match design file -->
			<!-- fixme: need to remap to material, maybe? -->
			<!--<Color x:Key="LocalSurfaceColor">#F0F0F3</Color>-->
			<Color x:Key="LightShadowColor">#FFFFFF</Color>
			<Color x:Key="ShadeShadowColor">#AEAEC0</Color>
			<!--<SolidColorBrush x:Key="LocalSurfaceBrush" Color="{StaticResource LocalSurfaceColor}" />-->

			<!-- shadow definition -->
			<utu:ShadowCollection x:Key="NoShadow" />
			<utu:ShadowCollection x:Key="NmpElevatedSmallButtonShadows">
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="4" Color="{ThemeResource ShadeShadowColor}" Opacity="0.4" IsInner="False" />
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="4" Color="{ThemeResource LightShadowColor}" Opacity="0.4" IsInner="False" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="NmpOutlinedTextBoxShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="4" Color="{ThemeResource LightShadowColor}" Opacity="0.4" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="4" Color="{ThemeResource ShadeShadowColor}" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>

			<!-- styles -->
			<Style x:Key="NmpSmallElevatedButtonStyle" TargetType="Button">
				<!-- ignore this style, just used to play around -->
				<Setter Property="Foreground" Value="{ThemeResource PrimaryBrush}" />
				<Setter Property="Background" Value="{ThemeResource LocalSurfaceBrush}" />
				<Setter Property="Margin" Value="4" />

				<!-- Typography: Label Large -->
				<Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
				<Setter Property="FontWeight" Value="{ThemeResource LabelLargeFontWeight}" />
				<Setter Property="FontSize" Value="{ThemeResource LabelLargeFontSize}" />
				
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<utu:ShadowContainer Shadows="{StaticResource NmpElevatedSmallButtonShadows}">
								<Grid Background="{TemplateBinding Background}"
									  CornerRadius="24"
									  Padding="24,10">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  MinWidth="{StaticResource ButtonIconMinWidth}"
													  HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}"
													  VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}"
													  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
									<ContentPresenter x:Name="ContentPresenter"
													  Grid.Column="1"
													  Margin="{StaticResource ButtonContentMargin}"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  FontWeight="{TemplateBinding FontWeight}"
													  CharacterSpacing="{TemplateBinding CharacterSpacing}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Grid>
							</utu:ShadowContainer>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="NmpTextBoxStyle" TargetType="TextBox">
				<Setter Property="Background" Value="{ThemeResource LocalSurfaceColor}" />
				<Setter Property="Foreground" Value="{ThemeResource OutlinedTextBoxForeground}" />
				<Setter Property="PlaceholderForeground" Value="{ThemeResource OutlinedTextBoxPlaceholderForeground}" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="BorderThickness" Value="0" />
				<!-- skia: there is some layout issue, when the CR is set from the style -->
				<!-- than directly on the inner grid -->
				<!--<Setter Property="CornerRadius" Value="4" />-->
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="8" />

				<!-- Typography: Body Large -->
				<Setter Property="FontFamily" Value="{ThemeResource OutlinedTextBoxFontFamily}" />
				<Setter Property="FontWeight" Value="{ThemeResource OutlinedTextBoxFontWeight}" />
				<Setter Property="FontSize" Value="{ThemeResource OutlinedTextBoxFontSize}" />
				<Setter Property="CharacterSpacing" Value="{ThemeResource OutlinedTextBoxCharacterSpacing}" />

				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="VerticalAlignment" Value="Top" />
				<Setter Property="HorizontalContentAlignment" Value="Left" />
				<Setter Property="VerticalContentAlignment" Value="Center" />

				<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
				<Setter Property="um:ControlExtensions.Icon" Value="{x:Null}" />

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="TextBox">
							<!--
								major changes from referenced style, OutlinedTextBoxStyle:
								- replaced root container, drop border
								- adjusted placeholder behavior:
								.... previously, we only have placeholder text, which behavior both as header+placeholder
								.... currently, it is split into header & placeholder according to the figma design
							-->
							<utu:ShadowContainer x:Name="RootPanel" Shadows="{StaticResource NmpOutlinedTextBoxShadows}">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal" />
										<VisualState x:Name="PointerOver" />
										<VisualState x:Name="Pressed" />
										<VisualState x:Name="Disabled">
											<VisualState.Setters>
												<Setter Target="RootPanel.Shadows" Value="{StaticResource NoShadow}" />
												<Setter Target="ContentPanel.BorderThickness" Value="1" />
												<Setter Target="ContentPanel.BorderBrush" Value="{ThemeResource OnSurfaceDisabledBrush}" />
												<Setter Target="HeaderContentPresenter.Foreground" Value="{ThemeResource OnSurfaceDisabledBrush}" />
												<Setter Target="ContentElement.Foreground" Value="{ThemeResource OnSurfaceDisabledBrush}" />
												<Setter Target="PlaceholderTextContentPresenter.Foreground" Value="{ThemeResource OnSurfaceDisabledBrush}" />
												<!--<Setter Target="HeaderContentPresenter.Foreground" Value="{ThemeResource OutlinedTextBoxForegroundDisabled}" />-->
												<!--<Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedTextBoxForegroundDisabled}" />-->
												<!--<Setter Target="PlaceholderTextContentPresenter.Foreground" Value="{ThemeResource OutlinedTextBoxForegroundDisabled}" />-->
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="Focused" />
									</VisualStateGroup>
									<VisualStateGroup x:Name="ButtonStates">
										<VisualState x:Name="ButtonVisible">
											<VisualState.Setters>
												<Setter Target="DeleteButton.Visibility" Value="Visible" />
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="ButtonCollapsed" />
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>


								<Grid x:Name="ContentPanel"
									  CornerRadius="4"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  Background="{TemplateBinding Background}"
									  MinHeight="40"
									  Padding="{TemplateBinding Padding}">
									<!-- vertical: 8pad, 20upper[3pad, header=16, 1pad], 20lower[19text, 1pad], 8pad -->
									<!--
										__0A             1*          2A              3A
										0A[leading-icon?][header...?][trailing-icon?][delete-button?]
										1A[leading-icon?][text...   ][trailing-icon?][delete-button?]
									-->
									<Grid.ColumnDefinitions>
										<!-- 0: leading-icon, 1: content, 2: trailing-icon, 3: delete-button -->
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<!-- 0: header, 1: text/placeholder, 0-1: icons, buttons -->
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" MinHeight="20" />
									</Grid.RowDefinitions>

									<!-- R0-1C0: leading icon -->
									<Border x:Name="LeadingIconContainer"
											Grid.Column="0"
											Grid.Row="0"
											Width="40"
											Height="40"
											Padding="8"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
										<ContentPresenter x:Name="IconPresenter"
														  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
														  HorizontalAlignment="Center"
														  Margin="0,0,8,0"
														  MaxHeight="34"
														  MaxWidth="34"
														  MinWidth="25" />
									</Border>

									<!-- R0C1: header -->
									<!-- header typograph: Small Body -->
									<ContentPresenter x:Name="HeaderContentPresenter"
													  Grid.Column="1"
													  Grid.Row="0"
													  Content="{TemplateBinding Header}"
													  ContentTemplate="{TemplateBinding HeaderTemplate}"
													  FontFamily="{ThemeResource MaterialMediumFontFamily}"
													  FontSize="{ThemeResource BodySmallFontSize}"
													  FontWeight="{ThemeResource BodySmallFontWeight}"
													  Foreground="{ThemeResource PrimaryBrush}"
													  Margin="0,3,0,1"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													  IsHitTestVisible="False" />

									<!-- R1C1: content -->
									<ScrollViewer x:Name="ContentElement"
												  Grid.Column="1"
												  Grid.Row="1"
												  Margin="0,0,0,1"
												  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
												  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
												  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
												  IsTabStop="False"
												  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
												  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  ZoomMode="Disabled"
												  AutomationProperties.AccessibilityView="Raw" />

									<!-- R1C1: placeholder -->
									<TextBlock x:Name="PlaceholderTextContentPresenter"
											   Grid.Column="1"
											   Grid.Row="1"
											   Margin="0,0,0,1"
											   Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}"
											   Text="{TemplateBinding PlaceholderText}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											   Visibility="{Binding Text, Converter={StaticResource MaterialEmptyToVisible}, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
											   Style="{StaticResource BodyLarge}" />

									<!-- R0-1C3: delete button -->
									<Button x:Name="DeleteButton"
											Grid.Column="3"
											Grid.Row="0"
											Grid.RowSpan="2"
											VerticalAlignment="Stretch"
											IsTabStop="False"
											AutomationProperties.AccessibilityView="Raw"
											Visibility="Collapsed"
											Style="{StaticResource MaterialDeleteButtonStyle}" />
								</Grid>
							</utu:ShadowContainer>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Page.Resources>

	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<sample:SamplePageLayout x:Name="SamplePageLayout" IsDesignAgnostic="True">
			<sample:SamplePageLayout.DesignAgnosticTemplate>
				<DataTemplate>
					<ScrollViewer HorizontalScrollMode="Disabled">
						<StackPanel Padding="0,24,0,16" Spacing="8">

							<StackPanel Width="400"
										Margin="0,32"
										Padding="32"
										Background="#7a67f8"
										CornerRadius="30">
								<utu:ShadowContainer Shadows="{StaticResource NeumorphismHollow}">
									<Grid CornerRadius="20" Padding="10">
										<TextBlock Text="NeumorphismHollow" />
									</Grid>
								</utu:ShadowContainer>
								<utu:ShadowContainer Shadows="{StaticResource NeumorphismRaising}">
									<Grid CornerRadius="20" Padding="10">
										<TextBlock Text="NeumorphismRaising" />
									</Grid>
								</utu:ShadowContainer>
								<utu:ShadowContainer Shadows="{StaticResource NeumorphismBulging}">
									<Grid CornerRadius="20" Padding="10">
										<TextBlock Text="NeumorphismBulging" />
									</Grid>
								</utu:ShadowContainer>
							</StackPanel>

							<TextBlock Text="Test" Style="{StaticResource TitleTextBlockStyle}" />
							<StackPanel Background="{ThemeResource LocalSurfaceBrush}"
										Width="400"
										Margin="32"
										Padding="32"
										Spacing="4">
								<Button Content="NmpSmallElevatedButtonStyle" Style="{StaticResource NmpSmallElevatedButtonStyle}" />
								<TextBox d:Name="SUT"
										 Text="NmpTextBoxStyle"
										 Style="{StaticResource NmpTextBoxStyle}" />
								<TextBox x:Name="SUT"
										 Header="header"
										 PlaceholderText="placeholder"
										 Text="text"
										 Style="{StaticResource NmpTextBoxStyle}" />
								<TextBox d:Name="SUT"
										 Header="header"
										 PlaceholderText="placeholder"
										 Style="{StaticResource NmpTextBoxStyle}" />
								<TextBox d:Name="SUT"
										 Header="header"
										 PlaceholderText="placeholder"
										 Text="text"
										 IsEnabled="False"
										 Style="{StaticResource NmpTextBoxStyle}" />
								<TextBox d:Name="SUT"
										 Header="header"
										 PlaceholderText="placeholder"
										 IsEnabled="False"
										 Style="{StaticResource NmpTextBoxStyle}" />
							</StackPanel>

						</StackPanel>
					</ScrollViewer>
				</DataTemplate>
			</sample:SamplePageLayout.DesignAgnosticTemplate>
		</sample:SamplePageLayout>
	</Grid>
</Page>
